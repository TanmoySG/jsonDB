{"version":3,"sources":["assets/wdb.png","assets/wdb-complete.png","components/navbar.component.js","components/hero.component.js","components/get-started.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","Container","Grid","container","item","xs","sm","md","lg","xl","src","require","style","height","alt","Link","variant","underline","href","target","float","color","icon","faGithub","fonts","font","weights","justify","alignItem","padding","width","Typography","fontFamily","textAlign","spacing","fontWeight","backgroundColor","borderRadius","margin","Negative","useStyletron","css","theme","className","display","alignItems","paddingRight","sizing","scale500","colors","negative400","size","GetStarted","useState","clusterId","setClusterId","tokens","setTokens","requestResponse","setrequestResponse","status","setStatus","jsonResponse","setjsonResponse","name","setName","username","setUsername","password","setPassword","React","isValid","setIsValid","isVisited","setIsVisited","shouldShowError","payload","payloadPrint","uaaEndpoint","Math","floor","random","length","handleSubmit","e","console","log","preventDefault","fetch","method","cache","headers","body","JSON","stringify","then","response","json","status_code","cluster_id","access_tokens","direction","faCubes","marginRight","marginLeft","endEnhancer","text","Tooltip","title","faCopy","value","boxShadow","marginTop","Paper","elevation","onSubmit","label","startEnhancer","faUser","onChange","error","faAt","validateEmail","onBlur","overrides","After","type","required","faLock","caption","disabled","onClick","faLayerGroup","pulse","positive","negative","undefined","Input","maxHeight","minHeight","minWidth","InputContainer","maxWidth","overflow","map","token","paddingTop","engine","Styletron","App","LightTheme","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1dc6179d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wdb.b252aa84.png\";","module.exports = __webpack_public_path__ + \"static/media/wdb-complete.fd2dfd03.png\";","import React from 'react';\r\nimport { Container, Grid, Link, Hidden, Typography } from \"@material-ui/core\";\r\nimport { faShieldAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <Container>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <img src={require(\"../assets/wdb.png\")} style={{ height: \"30px\" }} alt=\"logo\" />\r\n                    <Link variant=\"h5\" underline=\"none\" href=\"https://github.com/TanmoySG/wunderDB\"  target=\"_blank\" style={{  float: \"right\", color: \"#26242F\" }}><FontAwesomeIcon icon={faGithub} style={{ color: \"#26242F\" }} /></Link>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Container, Grid, Link, Hidden, Typography, Button } from \"@material-ui/core\";\r\nimport { faShieldAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport GoogleFontLoader from 'react-google-font-loader';\r\n\r\n\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <Container>\r\n            <GoogleFontLoader\r\n                fonts={[\r\n                    {\r\n                        font: 'DM Sans',\r\n                        weights: [400, 500, 700],\r\n                    },\r\n                    {\r\n                        font: 'Work Sans',\r\n                        weights: [100, 200, 300, 400, 500, 600, 700, 800, 900],\r\n                    },\r\n                ]}\r\n            />\r\n            <Grid container justify=\"center\" alignItem=\"center\" style={{ padding: \"10px\" }}>\r\n                <Grid item xs={10} sm={6} md={3} lg={3} xl={3}>\r\n                    <img src={require(\"../assets/wdb-complete.png\")} style={{ height: \"100%\", width: \"100%\" }} alt=\"logo\" />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container justify=\"center\" alignItem=\"center\" style={{ padding: \"10px\" }}>\r\n                <Grid item xs={12} sm={12} md={10} lg={10} xl={10}>\r\n                    <Typography variant=\"h5\" style={{ fontFamily: \"Work Sans\", textAlign: \"center\" }}>wunderDB is a JSON-based micro Document Database, inspired by <Link underline=\"always\" href=\"https://www.mongodb.com\" target=\"_blank\" style={{ color: \"#00d263\" }}>MongoDB</Link>.</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container justify=\"center\" alignItem=\"center\" style={{ padding: \"10px\" }} spacing={3}>\r\n                <Link variant=\"subtitle1\" underline=\"none\" href=\"#registration\" style={{ fontFamily: \"DM Sans\", fontWeight: \"400\", backgroundColor: \"#A6FFCB\", color: \"#307D51\", padding: \"10px\", borderRadius: \"5px\", margin: \"5px\" }}>Get-started</Link>\r\n                <Link variant=\"subtitle1\" underline=\"none\" href=\"https://github.com/TanmoySG/wunderDB/blob/master/documentation/documentation.md\" target=\"_blank\" style={{ fontFamily: \"DM Sans\", fontWeight: \"400\", backgroundColor: \"#C3DFFF\", color: \"#395a7f\", padding: \"10px\", borderRadius: \"5px\", margin: \"5px\" }}>Documentation</Link>\r\n                <Link variant=\"subtitle1\" underline=\"none\" href=\"https://github.com/TanmoySG/wunderDB/blob/master/documentation/deep-dive.md\" target=\"_blank\" style={{ fontFamily: \"DM Sans\", fontWeight: \"400\", backgroundColor: \"#e5c7ff\", color: \"#734999\", padding: \"10px\", borderRadius: \"5px\", margin: \"5px\" }}>Deep Dive</Link>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState } from 'react';\r\nimport { useStyletron } from 'baseui';\r\nimport { Container, Grid, Paper, Typography, Tooltip, Link, Badge } from \"@material-ui/core\";\r\nimport { faCubes, faCopy, faUser, faLock, faAt, faLayerGroup } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { FormControl } from \"baseui/form-control\";\r\nimport { Input } from \"baseui/input\";\r\nimport { Alert } from 'baseui/icon';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { validate as validateEmail } from 'email-validator';\r\nimport { Button } from \"baseui/button\";\r\nimport { Textarea } from \"baseui/textarea\";\r\nimport 'status-indicator/styles.css'\r\n\r\n\r\nfunction Negative() {\r\n    const [css, theme] = useStyletron();\r\n    return (\r\n        <div\r\n            className={css({\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                paddingRight: theme.sizing.scale500,\r\n                color: theme.colors.negative400,\r\n            })}\r\n        >\r\n            <Alert size=\"18px\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction GetStarted() {\r\n\r\n    const [clusterId, setClusterId] = useState('<cluster-id>');\r\n    const [tokens, setTokens] = useState(['<one-of-the-three-tokens-generated>']);\r\n    const [requestResponse, setrequestResponse] = useState('Send Request');\r\n    const [status, setStatus] = useState('2')\r\n    const [jsonResponse, setjsonResponse] = useState({});\r\n    const [name, setName] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isValid, setIsValid] = React.useState(false);\r\n    const [isVisited, setIsVisited] = React.useState(false);\r\n    const shouldShowError = !isValid && isVisited;\r\n    const onChange = ({ target: { value } }) => {\r\n        setIsValid(validateEmail(value));\r\n        setUsername(value);\r\n    };\r\n    var payload = {\r\n        \"name\": name,\r\n        \"username\": username,\r\n        \"password\": password\r\n    };\r\n    var payloadPrint = \"{ \\n\\t 'name' : '\" + name + \"', \\n\\t 'username' : '\" + username + \"', \\n\\t 'password' : '\" + password + \"' \\n }\";\r\n    var uaaEndpoint = \"https://wdb.tanmoysg.com/connect?cluster=\" + clusterId + \"&token=\" + tokens[Math.floor(Math.random() * tokens.length)];\r\n\r\n    const handleSubmit = (e) => {\r\n        console.log(payload);\r\n        e.preventDefault();\r\n        fetch(\"https://wdb.tanmoysg.com/register\", {\r\n            method: \"POST\",\r\n            cache: \"no-cache\",\r\n            headers: {\r\n                \"content_type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(payload)\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(json => {\r\n            setjsonResponse(json);\r\n            console.log(json);\r\n            setrequestResponse(json.response);\r\n            if (json.status_code === '1') {\r\n                setStatus(json.status_code);\r\n                setClusterId(json.cluster_id);\r\n                setTokens(json.access_tokens);\r\n            } else {\r\n                setStatus(json.status_code);\r\n            }\r\n        })\r\n    };\r\n\r\n    return (\r\n        <Container >\r\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                <Typography variant=\"h5\" style={{ fontFamily: \"DM Sans\", fontWeight: \"500\", color: \"#307D51\", padding: \"10px\" }}><FontAwesomeIcon icon={faCubes} style={{ color: \"#307D51\", marginRight: \"5px\", marginLeft: \"5px\" }} /> Get Started </Typography>\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6} justify=\"center\" alignItems=\"center\">\r\n                            <Typography variant=\"subtitle1\" style={{ fontFamily: \"DM Sans\", fontWeight: \"500\", color: \"black\", textAlign: \"center\" }}>Unified Actions API Endpoint</Typography>\r\n                            <Input endEnhancer={\r\n                                <CopyToClipboard text={uaaEndpoint}>\r\n                                    <Tooltip title=\"Click to copy\">\r\n                                        <FontAwesomeIcon icon={faCopy} />\r\n                                    </Tooltip>\r\n                                </CopyToClipboard>\r\n                            } value={uaaEndpoint} style={{ boxShadow: \"0px 0px 32px -6px rgba(0,0,0,0.72)\" }} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" spacing={3}>\r\n                    <Grid item xs={12} sm={12} md={4} lg={4} xl={4} style={{ marginTop: \"15px\" }}>\r\n                        <Paper style={{ padding: \"20px\" }} elevation={5}>\r\n                            <form onSubmit={handleSubmit}>\r\n                                <Typography variant=\"h5\" style={{ fontFamily: \"DM Sans\", fontWeight: \"500\", color: \"#395a7f\" }}>Register</Typography>\r\n                                <FormControl label=\"Name\" >\r\n                                    <Input startEnhancer={<FontAwesomeIcon icon={faUser} />} onChange={e => setName(e.target.value)} />\r\n                                </FormControl>\r\n                                <FormControl label=\"Email\" error={shouldShowError ? 'Please input a valid email address' : null}>\r\n                                    <Input startEnhancer={<FontAwesomeIcon icon={faAt} />} onChange={onChange} onBlur={() => setIsVisited(true)} error={shouldShowError} overrides={shouldShowError ? { After: Negative } : {}} type=\"email\" required />\r\n                                </FormControl>\r\n                                <FormControl label=\"Password\" >\r\n                                    <Input startEnhancer={<FontAwesomeIcon icon={faLock} />} type=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                </FormControl>\r\n                                <FormControl label=\"Payload\" caption=\"Payload to be sent to the API.\" >\r\n                                    <Textarea\r\n                                        value={payloadPrint}\r\n                                        disabled\r\n                                    />\r\n                                </FormControl>\r\n                                <Button preventDefault onClick={handleSubmit} style={{ fontFamily: \"DM Sans\", fontWeight: \"400\", backgroundColor: \"#C3DFFF\", color: \"#395a7f\", padding: \"10px\", borderRadius: \"5px\", margin: \"5px\" }}> <FontAwesomeIcon icon={faLayerGroup} style={{ color: \"#395a7f\", marginRight: \"5px\", marginLeft: \"5px\" }} /> Create Cluster</Button>\r\n                            </form>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={8} lg={8} xl={8} style={{ marginTop: \"15px\" }}>\r\n                        <Paper style={{ padding: \"20px\" }} elevation={5}>\r\n                            <Grid container direction=\"row\" alignItems=\"center\" justify=\"space-between\">\r\n                                <Grid item>\r\n                                    <Typography variant=\"h5\" style={{ fontFamily: \"DM Sans\", fontWeight: \"500\", color: \"#395a7f\"}}>Response</Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Tooltip title={status === '2' ? \"No Request in Pipeline\" : status === '1' ? \"Request Successful\" : \"Request Unsuccessful\"}>\r\n                                        {status === '2' ? <status-indicator pulse></status-indicator> : status === '1' ? <status-indicator positive pulse></status-indicator> : <status-indicator negative pulse></status-indicator>}\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Textarea\r\n                                value={JSON.stringify(jsonResponse, undefined, 4)}\r\n                                overrides={{\r\n                                    Input: {\r\n                                        style: {\r\n                                            maxHeight: '300px',\r\n                                            minHeight: '200px',\r\n                                            minWidth: '300px',\r\n                                            width: '100vw', // fill all available space up to parent max-width\r\n                                        },\r\n                                    },\r\n                                    InputContainer: {\r\n                                        style: {\r\n                                            maxWidth: '100%',\r\n                                            width: 'min-content',\r\n                                        },\r\n                                    },\r\n                                }}\r\n                                style={{overflow: \"auto\"}}\r\n                            />\r\n                            <Typography variant=\"subtitle1\" style={{ fontFamily: \"DM Sans\", fontWeight: \"400\" }}> Response:</Typography>\r\n                            <Typography variant=\"h6\" style={{ fontFamily: \"DM Sans\", fontWeight: \"600\", color: \"#395a7f\", overflow: \"auto\" }}>{requestResponse}</Typography>\r\n                            <Typography variant=\"subtitle1\" style={{ fontFamily: \"DM Sans\", fontWeight: \"400\" }}> Cluster ID:</Typography>\r\n                            <CopyToClipboard text={clusterId}>\r\n                                <Tooltip title=\"Click to copy\">\r\n                                    <Typography variant=\"h6\" style={{ fontFamily: \"DM Sans\", fontWeight: \"600\", color: \"#395a7f\" , overflow: \"auto\"}}>{clusterId}</Typography>\r\n                                </Tooltip>\r\n                            </CopyToClipboard>\r\n                            <Typography variant=\"subtitle1\" style={{ fontFamily: \"DM Sans\", fontWeight: \"400\" }}>Access Tokens:</Typography>\r\n\r\n                            {\r\n                                tokens.map((token) => {\r\n                                    return (\r\n                                        <CopyToClipboard text={token}>\r\n                                            <Tooltip title=\"Click to copy\">\r\n                                                <Typography variant=\"h6\" style={{ fontFamily: \"DM Sans\", fontWeight: \"600\", color: \"#395a7f\" ,overflow: \"auto\" }}>{token}</Typography>\r\n                                            </Tooltip>\r\n                                        </CopyToClipboard>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Paper>\r\n                        <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\" style={{ textAlign: \"center\", paddingTop : \"20px\" }} >\r\n                            <Typography variant=\"subtitle1\">Developed by <Link variant=\"subtitle1\" underline=\"none\" target=\"_blank\" href=\"https://www.tanmoysg.com\" style={{ fontFamily: \"DM Sans\", fontWeight: \"400\", color: \"#734999\" }}>Tanmoy Sen Gupta</Link></Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default GetStarted;\r\n\r\n","import React from 'react';\nimport './App.css';\nimport { Client as Styletron } from 'styletron-engine-atomic';\nimport { Provider as StyletronProvider } from 'styletron-react';\nimport { LightTheme, BaseProvider } from 'baseui';\nimport GoogleFontLoader from 'react-google-font-loader';\nimport { Link, Typography, Grid } from \"@material-ui/core\";\nimport { faShieldAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport Navbar from \"./components/navbar.component\";\nimport Hero from \"./components/hero.component\";\nimport GetStarted from \"./components/get-started.component\";\n\n\nconst engine = new Styletron();\n\n\nfunction App() {\n\n  return (\n\n    <StyletronProvider value={engine}>\n      <BaseProvider theme={LightTheme}>\n        <GoogleFontLoader\n          fonts={[\n            {\n              font: 'DM Sans',\n              weights: [400, 500, 700],\n            },\n            {\n              font: 'Work Sans',\n              weights: [100, 200, 300, 400, 500, 600, 700, 800, 900],\n            },\n          ]}\n        />\n        <Grid container>\n          <Grid container direction=\"row\" alignItems=\"center\" style={{ width: \"100vw\", height: \"12vh\", boxShadow: \"-1px 12px 70px -1px rgba(161,161,161,0.15)\" }} >\n            <Navbar />\n          </Grid>\n          <Grid container direction=\"row\" alignItems=\"center\" style={{ height: \"88vh\" }} >\n            <Hero />\n          </Grid>\n        </Grid>\n        <section id=\"registration\">\n          <Grid container direction=\"row\" alignItems=\"center\" style={{ height: \"100vh\", padding: \"20px\" }} >\n            <GetStarted />\n          </Grid>\n        </section>\n      </BaseProvider>\n    </StyletronProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}